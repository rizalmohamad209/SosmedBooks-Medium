generator client {
  provider        = "prisma-client-js"
  previewFeatures = ["groupBy"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model books {
  id_books    Int          @id @default(autoincrement())
  title       String?
  publisher   String?
  author      String?
  ISBN        Int?
  pages       Int?
  description String?
  cover__book String?      @map("cover_ book")
  id_category Int?
  id_user     Int?
  category    category?    @relation(fields: [id_category], references: [id_category])
  user        user?        @relation(fields: [id_user], references: [id_user])
  borrow      borrow[]
  discussion  discussion[]
  rating      rating[]
}

model borrow {
  id_borrow  Int       @id @default(autoincrement())
  start_date DateTime? @db.Date
  end_date   DateTime? @db.Date
  id_books   Int?
  id_user    Int?
  books      books?    @relation(fields: [id_books], references: [id_books])
  user       user?     @relation(fields: [id_user], references: [id_user])
}

model category {
  id_category    Int     @id @default(autoincrement())
  name_category  String?
  cover_category String?
  books          books[]
}

model discussion {
  id_discussion Int     @id @default(autoincrement())
  diskusi       String?
  id_books      Int?
  id_user       Int?
  books         books?  @relation(fields: [id_books], references: [id_books])
  user          user?   @relation(fields: [id_user], references: [id_user])
}

model user {
  id_user    Int          @id @default(autoincrement())
  name_user  String?
  username   String?
  email      String?
  password   String?
  NIK        Int?
  foto_user  String?
  address    String?
  no_hp      String?
  gender     String?      @db.Char(1)
  birth_date DateTime?    @db.Date
  books      books[]
  borrow     borrow[]
  discussion discussion[]
}

model rating {
  id_rating Int    @id @default(autoincrement())
  rating    Float?
  id_books  Int?
  books     books? @relation(fields: [id_books], references: [id_books])
}
