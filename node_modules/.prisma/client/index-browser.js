
Object.defineProperty(exports, "__esModule", { value: true });

const {
  Decimal
} = require('@prisma/client/runtime/index-browser')


const Prisma = {}

exports.Prisma = Prisma

/**
 * Prisma Client JS version: 2.18.0
 * Query Engine version: da6fafb57b24e0b61ca20960c64e2d41f9e8cff1
 */
Prisma.prismaVersion = {
  client: "2.18.0",
  engine: "da6fafb57b24e0b61ca20960c64e2d41f9e8cff1"
}

Prisma.PrismaClientKnownRequestError = () => {
  throw new Error(`PrismaClientKnownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)};
Prisma.PrismaClientUnknownRequestError = () => {
  throw new Error(`PrismaClientUnknownRequestError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientRustPanicError = () => {
  throw new Error(`PrismaClientRustPanicError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientInitializationError = () => {
  throw new Error(`PrismaClientInitializationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.PrismaClientValidationError = () => {
  throw new Error(`PrismaClientValidationError is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.Decimal = Decimal

/**
 * Re-export of sql-template-tag
 */

Prisma.sql = () => {
  throw new Error(`sqltag is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.empty = () => {
  throw new Error(`empty is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.join = () => {
  throw new Error(`join is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.raw = () => {
  throw new Error(`raw is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
)}
Prisma.validator = () => (val) => val

/**
 * Enums
 */
// Based on
// https://github.com/microsoft/TypeScript/issues/3192#issuecomment-261720275
function makeEnum(x) { return x; }

exports.Prisma.BooksScalarFieldEnum = makeEnum({
  id_books: 'id_books',
  title: 'title',
  publisher: 'publisher',
  author: 'author',
  ISBN: 'ISBN',
  pages: 'pages',
  description: 'description',
  cover__book: 'cover__book',
  id_category: 'id_category',
  id_discussion: 'id_discussion',
  id_user: 'id_user',
  id_rate: 'id_rate'
});

exports.Prisma.BorrowScalarFieldEnum = makeEnum({
  id_borrow: 'id_borrow',
  start_date: 'start_date',
  end_date: 'end_date',
  id_books: 'id_books',
  id_user: 'id_user'
});

exports.Prisma.CategoryScalarFieldEnum = makeEnum({
  id_category: 'id_category',
  name_category: 'name_category',
  cover_category: 'cover_category'
});

exports.Prisma.DiscussionScalarFieldEnum = makeEnum({
  id_discussion: 'id_discussion',
  diskusi: 'diskusi'
});

exports.Prisma.UserScalarFieldEnum = makeEnum({
  id_user: 'id_user',
  name_user: 'name_user',
  username: 'username',
  email: 'email',
  password: 'password',
  NIK: 'NIK',
  foto_user: 'foto_user',
  address: 'address',
  no_hp: 'no_hp',
  gender: 'gender',
  birth_date: 'birth_date'
});

exports.Prisma.SortOrder = makeEnum({
  asc: 'asc',
  desc: 'desc'
});

exports.Prisma.QueryMode = makeEnum({
  default: 'default',
  insensitive: 'insensitive'
});


exports.Prisma.ModelName = makeEnum({
  books: 'books',
  borrow: 'borrow',
  category: 'category',
  discussion: 'discussion',
  user: 'user'
});

/**
 * Create the Client
 */
class PrismaClient {
  constructor() {
    throw new Error(
      `PrismaClient is unable to be run in the browser.
In case this error is unexpected for you, please report it in https://github.com/prisma/prisma/issues`,
    )
  }
}
exports.PrismaClient = PrismaClient

Object.assign(exports, Prisma)
